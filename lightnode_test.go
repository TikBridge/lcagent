// Copyright 2021 TikBridge
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"encoding/hex"
	"testing"
)

func TestMain(m *testing.M) {
	initTKMLNAbi()
	initUpdatableLNAbi()
	initMCSAbis()
	initRelayLNAbi()
	m.Run()
}

func TestLNABI(t *testing.T) {
	t.Log(LightNodeABI.Constructor)
	t.Log("events")
	for n, e := range LightNodeABI.Events {
		t.Log(n, "=>", e)
	}
	t.Log("methods")
	for n, e := range LightNodeABI.Methods {
		t.Log(n, "=>", e)
	}
	t.Log("errors")
	for n, e := range LightNodeABI.Errors {
		t.Log(n, "=>", e)
	}
	t.Log(LightNodeABI.Fallback)
	t.Log(LightNodeABI.Receive)
}

func TestUpdateComm(t *testing.T) {
	bs, _ := hex.DecodeString("")
	a := new(struct {
		Bs []byte `abi:"_epochCommittee"`
	})
	if err := LightNodeABI.UnpackInput(a, updateCommName, bs[4:]); err != nil {
		t.Fatal(err)
	}
	t.Logf("%x", a.Bs)
	b := new(struct {
		Proof TKMCommProof `abi:"epochCommittee"`
	})
	if err := LightNodeABI.UnpackInput(b, updateNextCommName, a.Bs); err != nil {
		t.Fatal(err)
	}
	t.Log(b.Proof)
}
