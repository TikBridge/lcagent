// Copyright 2021 TikBridge
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"context"
	"encoding/hex"
	"math/big"
	"testing"

	"github.com/ThinkiumGroup/go-common"
	"github.com/ThinkiumGroup/go-tkmrpc/models"
)

const (
	test_abi_string_1 = `[
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "bytes32",
						"name": "Hash",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "Pos",
						"type": "bool"
					},
					{
						"internalType": "uint8",
						"name": "Repeat",
						"type": "uint8"
					}
				],
				"internalType": "struct Mpts.MerkleProof[]",
				"name": "mps",
				"type": "tuple[]"
			},
			{
				"internalType": "uint32",
				"name": "index",
				"type": "uint32"
			}
		],
		"name": "HashAtIndex",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "",
				"type": "bytes32"
			}
		],
		"stateMutability": "pure",
		"type": "function"
	}
]`

	test_abi_string_2 = `[
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "bytes",
						"name": "PostState",
						"type": "bytes"
					},
					{
						"internalType": "uint64",
						"name": "Status",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "CumulativeGasUsed",
						"type": "uint64"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "Address",
								"type": "address"
							},
							{
								"internalType": "bytes32[]",
								"name": "Topics",
								"type": "bytes32[]"
							},
							{
								"internalType": "bytes",
								"name": "Data",
								"type": "bytes"
							},
							{
								"internalType": "uint64",
								"name": "BlockNumber",
								"type": "uint64"
							},
							{
								"internalType": "bytes32",
								"name": "TxHash",
								"type": "bytes32"
							},
							{
								"internalType": "uint32",
								"name": "TxIndex",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "Index",
								"type": "uint32"
							},
							{
								"internalType": "bytes32",
								"name": "BlockHash",
								"type": "bytes32"
							}
						],
						"internalType": "struct rlptest.Log[]",
						"name": "Logs",
						"type": "tuple[]"
					},
					{
						"internalType": "bytes",
						"name": "TxHash",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "ContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "GasUsed",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "Out",
						"type": "bytes"
					},
					{
						"internalType": "string",
						"name": "Error",
						"type": "string"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "Winner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "Val",
								"type": "uint256"
							}
						],
						"internalType": "struct rlptest.Bonus[]",
						"name": "GasBonuses",
						"type": "tuple[]"
					},
					{
						"internalType": "uint16",
						"name": "Version",
						"type": "uint16"
					}
				],
				"internalType": "struct rlptest.Receipt",
				"name": "r",
				"type": "tuple"
			}
		],
		"name": "hashReceipt",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "",
				"type": "bytes32"
			}
		],
		"stateMutability": "pure",
		"type": "function"
	}
]`
)

func _getSomeProofs(t *testing.T) []MerkleProof {
	bs, _ := hex.DecodeString("")
	obj1 := new(struct {
		Data []byte `abi:"proofBytes"`
	})
	if err := XLightNodeAbi.UnpackInput(obj1, xVerifyReceiptData, bs[4:]); err != nil {
		t.Fatal(err)
	}
	obj2 := new(struct {
		Data TKMReceiptData `abi:"receiptData"`
	})
	if err := XLightNodeAbi.UnpackInput(obj2, xVerifyReceiptStruct, obj1.Data); err != nil {
		t.Fatal(err)
	}
	return obj2.Data.Proofs
}

func TestHashAtIndex(t *testing.T) {
	ab := mustInitAbi("test abi", test_abi_string_1)
	mname := "HashAtIndex"
	obj := new(struct {
		Mps   []MerkleProof `abi:"mps"`
		Index uint32        `abi:"index"`
	})
	obj.Mps = _getSomeProofs(t)
	obj.Index = 6

	target, err := NewEthClient(context.Background(), "http://127.0.0.1:32034", nil, 10)
	if err != nil {
		t.Fatal(err)
	}
	defer target.Close()
	sender, _ := models.NewIdentifierByHex("9fa39e6c8c4a9a6d21de1c2df19f0034f10532f6ffb065407ce3eb3e3d795cd0")
	to := common.HexToAddress("0x749081E80d9FF2368593e4cb2A9B934c8f14Ee06")

	outobj := new(struct{ Value common.Hash })
	err = target.getter(context.Background(), sender.Address(), &to, ab.Methods[mname], outobj, obj.Mps, obj.Index)
	if err != nil {
		t.Fatal(err)
	}
	t.Logf("%x", outobj.Value[:])
}

func Test_ReceiptInput(t *testing.T) {
	bs, _ := hex.DecodeString("")
	obj1 := new(struct {
		Data []byte `abi:"proofBytes"`
	})
	if err := XLightNodeAbi.UnpackInput(obj1, xVerifyReceiptData, bs[4:]); err != nil {
		t.Fatal(err)
	}
	obj2 := new(struct {
		Data TKMReceiptData `abi:"receiptData"`
	})
	if err := XLightNodeAbi.UnpackInput(obj2, xVerifyReceiptStruct, obj1.Data); err != nil {
		t.Fatal(err)
	}

	obj2.Data.Receipt.Logs = obj2.Data.Receipt.Logs[3:4]

	ab := mustInitAbi("test abi2", test_abi_string_2)
	mname := "hashReceipt"

	// input, err := ab.Methods[mname].Inputs.Pack(obj2.Data.Receipt)

	input, err := ab.Pack(mname, obj2.Data.Receipt)
	if err != nil {
		t.Fatal(err)
	}
	t.Logf("%x", input)
	//
	// receiptObj := new(struct{ Receipt TKMReceipt })
	// if err := ab.UnpackInput(receiptObj, mname, input[4:]); err != nil {
	// 	t.Fatal(err)
	// }
	// t.Logf("%+v", receiptObj)
}

func Test_Uint256(t *testing.T) {
	i := new(big.Int)
	bs, _ := hex.DecodeString("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
	i.SetBytes(bs)
	t.Logf("%s", i)
}
